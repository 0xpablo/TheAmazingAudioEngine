// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		4C34874D14E9A7EB00301A09 /* AudioToolbox.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4C34874C14E9A7EB00301A09 /* AudioToolbox.framework */; };
		4C34877314E9B7A400301A09 /* caitlin.caf in Resources */ = {isa = PBXBuildFile; fileRef = 4C34877114E9B7A400301A09 /* caitlin.caf */; };
		4C34877414E9B7A400301A09 /* congaloop.caf in Resources */ = {isa = PBXBuildFile; fileRef = 4C34877214E9B7A400301A09 /* congaloop.caf */; };
		4C34877714E9B8CA00301A09 /* TPAudioFilePlayer.m in Sources */ = {isa = PBXBuildFile; fileRef = 4C34877614E9B8CA00301A09 /* TPAudioFilePlayer.m */; };
		4C34877914EA699300301A09 /* dmxbeat.aiff in Resources */ = {isa = PBXBuildFile; fileRef = 4C34877814EA699300301A09 /* dmxbeat.aiff */; };
		4C34877B14EA841000301A09 /* lead.aif in Resources */ = {isa = PBXBuildFile; fileRef = 4C34877A14EA841000301A09 /* lead.aif */; };
		4C5C510714EA9A110012D39E /* TPAudioController.m in Sources */ = {isa = PBXBuildFile; fileRef = 4CE5019E1493F84300F23607 /* TPAudioController.m */; };
		4C5C510814EA9A110012D39E /* TPACCircularBuffer.c in Sources */ = {isa = PBXBuildFile; fileRef = 4CC62FBE14E7F7A300B5A2DB /* TPACCircularBuffer.c */; };
		4C5C510914EA9A110012D39E /* TPTrialModeController.m in Sources */ = {isa = PBXBuildFile; fileRef = 4CE62D0F1494B7B000F908A6 /* TPTrialModeController.m */; };
		4C5C510A14EA9A170012D39E /* TPAudioController.h in Headers */ = {isa = PBXBuildFile; fileRef = 4CE5019D1493F84300F23607 /* TPAudioController.h */; settings = {ATTRIBUTES = (Public, ); }; };
		4C5C510B14EA9A1D0012D39E /* TPAudioController.m in Sources */ = {isa = PBXBuildFile; fileRef = 4CE5019E1493F84300F23607 /* TPAudioController.m */; };
		4C5C510C14EA9A1D0012D39E /* TPACCircularBuffer.c in Sources */ = {isa = PBXBuildFile; fileRef = 4CC62FBE14E7F7A300B5A2DB /* TPACCircularBuffer.c */; };
		4C5C510D14EA9A210012D39E /* TPAudioController.h in Headers */ = {isa = PBXBuildFile; fileRef = 4CE5019D1493F84300F23607 /* TPAudioController.h */; settings = {ATTRIBUTES = (Public, ); }; };
		4C5C511714EA9CC50012D39E /* TPAudioController.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4C5C50E314EA98E90012D39E /* TPAudioController.framework */; };
		4C5C511C14EA9D790012D39E /* TPOscilloscopeLayer.m in Sources */ = {isa = PBXBuildFile; fileRef = 4C5C511914EA9D790012D39E /* TPOscilloscopeLayer.m */; };
		4C5C511F14EAA39D0012D39E /* QuartzCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4C5C511E14EAA39D0012D39E /* QuartzCore.framework */; };
		4CAD2F7014E9A3BF00656553 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4CAD2F6F14E9A3BF00656553 /* UIKit.framework */; };
		4CAD2F7214E9A3BF00656553 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4CAD2F7114E9A3BF00656553 /* Foundation.framework */; };
		4CAD2F7414E9A3BF00656553 /* CoreGraphics.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4CAD2F7314E9A3BF00656553 /* CoreGraphics.framework */; };
		4CAD2F9214E9A40000656553 /* TPAppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 4CAD2F8F14E9A40000656553 /* TPAppDelegate.m */; };
		4CAD2F9314E9A40000656553 /* TPViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 4CAD2F9114E9A40000656553 /* TPViewController.m */; };
		4CAD2F9814E9A41200656553 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 4CAD2F9614E9A41200656553 /* main.m */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		4C5C511514EA9CC00012D39E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 4CE501831493F82600F23607 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 4C5C50E214EA98E90012D39E;
			remoteInfo = TPAudioController;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		4C34874714E9A71700301A09 /* TPAudioControllerTrial-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "TPAudioControllerTrial-Info.plist"; sourceTree = "<group>"; };
		4C34874814E9A71700301A09 /* TPAudioControllerTrial-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "TPAudioControllerTrial-Prefix.pch"; sourceTree = "<group>"; };
		4C34874C14E9A7EB00301A09 /* AudioToolbox.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = AudioToolbox.framework; path = System/Library/Frameworks/AudioToolbox.framework; sourceTree = SDKROOT; };
		4C34877114E9B7A400301A09 /* caitlin.caf */ = {isa = PBXFileReference; lastKnownFileType = file; name = caitlin.caf; path = "TPAudioController/Test Suite/caitlin.caf"; sourceTree = SOURCE_ROOT; };
		4C34877214E9B7A400301A09 /* congaloop.caf */ = {isa = PBXFileReference; lastKnownFileType = file; name = congaloop.caf; path = "TPAudioController/Test Suite/congaloop.caf"; sourceTree = SOURCE_ROOT; };
		4C34877514E9B8CA00301A09 /* TPAudioFilePlayer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = TPAudioFilePlayer.h; path = "TPAudioController/Test Suite/TPAudioFilePlayer.h"; sourceTree = SOURCE_ROOT; };
		4C34877614E9B8CA00301A09 /* TPAudioFilePlayer.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = TPAudioFilePlayer.m; path = "TPAudioController/Test Suite/TPAudioFilePlayer.m"; sourceTree = SOURCE_ROOT; };
		4C34877814EA699300301A09 /* dmxbeat.aiff */ = {isa = PBXFileReference; lastKnownFileType = audio.aiff; name = dmxbeat.aiff; path = "TPAudioController/Test Suite/dmxbeat.aiff"; sourceTree = SOURCE_ROOT; };
		4C34877A14EA841000301A09 /* lead.aif */ = {isa = PBXFileReference; lastKnownFileType = file; name = lead.aif; path = "TPAudioController/Test Suite/lead.aif"; sourceTree = SOURCE_ROOT; };
		4C5C50E314EA98E90012D39E /* TPAudioController.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework.static; includeInIndex = 0; path = TPAudioController.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		4C5C50F714EA98F30012D39E /* TPAudioController.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework.static; includeInIndex = 0; path = TPAudioController.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		4C5C511814EA9D790012D39E /* TPOscilloscopeLayer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = TPOscilloscopeLayer.h; path = "TPAudioController/Test Suite/TPOscilloscopeLayer.h"; sourceTree = SOURCE_ROOT; };
		4C5C511914EA9D790012D39E /* TPOscilloscopeLayer.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = TPOscilloscopeLayer.m; path = "TPAudioController/Test Suite/TPOscilloscopeLayer.m"; sourceTree = SOURCE_ROOT; };
		4C5C511E14EAA39D0012D39E /* QuartzCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = QuartzCore.framework; path = System/Library/Frameworks/QuartzCore.framework; sourceTree = SDKROOT; };
		4CAD2F6C14E9A3BF00656553 /* Audio Controller Test Suite.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Audio Controller Test Suite.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		4CAD2F6F14E9A3BF00656553 /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = System/Library/Frameworks/UIKit.framework; sourceTree = SDKROOT; };
		4CAD2F7114E9A3BF00656553 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		4CAD2F7314E9A3BF00656553 /* CoreGraphics.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreGraphics.framework; path = System/Library/Frameworks/CoreGraphics.framework; sourceTree = SDKROOT; };
		4CAD2F8E14E9A40000656553 /* TPAppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = TPAppDelegate.h; path = "TPAudioController/Test Suite/TPAppDelegate.h"; sourceTree = SOURCE_ROOT; };
		4CAD2F8F14E9A40000656553 /* TPAppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = TPAppDelegate.m; path = "TPAudioController/Test Suite/TPAppDelegate.m"; sourceTree = SOURCE_ROOT; };
		4CAD2F9014E9A40000656553 /* TPViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = TPViewController.h; path = "TPAudioController/Test Suite/TPViewController.h"; sourceTree = SOURCE_ROOT; };
		4CAD2F9114E9A40000656553 /* TPViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = TPViewController.m; path = "TPAudioController/Test Suite/TPViewController.m"; sourceTree = SOURCE_ROOT; };
		4CAD2F9414E9A41200656553 /* Audio Controller Test Suite-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "Audio Controller Test Suite-Info.plist"; path = "TPAudioController/Test Suite/Audio Controller Test Suite-Info.plist"; sourceTree = SOURCE_ROOT; };
		4CAD2F9514E9A41200656553 /* Audio Controller Test Suite-Prefix.pch */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = "Audio Controller Test Suite-Prefix.pch"; path = "TPAudioController/Test Suite/Audio Controller Test Suite-Prefix.pch"; sourceTree = SOURCE_ROOT; };
		4CAD2F9614E9A41200656553 /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = "TPAudioController/Test Suite/main.m"; sourceTree = SOURCE_ROOT; };
		4CC62FBE14E7F7A300B5A2DB /* TPACCircularBuffer.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = TPACCircularBuffer.c; path = ../../TPACCircularBuffer.c; sourceTree = "<group>"; };
		4CC62FBF14E7F7A300B5A2DB /* TPACCircularBuffer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = TPACCircularBuffer.h; path = ../../TPACCircularBuffer.h; sourceTree = "<group>"; };
		4CE501931493F82600F23607 /* TPAudioController-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "TPAudioController-Info.plist"; sourceTree = "<group>"; };
		4CE501971493F82600F23607 /* TPAudioController-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "TPAudioController-Prefix.pch"; sourceTree = "<group>"; };
		4CE5019D1493F84300F23607 /* TPAudioController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = TPAudioController.h; path = ../../TPAudioController.h; sourceTree = "<group>"; };
		4CE5019E1493F84300F23607 /* TPAudioController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = TPAudioController.m; path = ../../TPAudioController.m; sourceTree = "<group>"; };
		4CE62D0E1494B7B000F908A6 /* TPTrialModeController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = TPTrialModeController.h; sourceTree = "<group>"; };
		4CE62D0F1494B7B000F908A6 /* TPTrialModeController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = TPTrialModeController.m; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		4C5C50DD14EA98E90012D39E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C5C50F114EA98F30012D39E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4CAD2F6914E9A3BF00656553 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C5C511F14EAA39D0012D39E /* QuartzCore.framework in Frameworks */,
				4C5C511714EA9CC50012D39E /* TPAudioController.framework in Frameworks */,
				4C34874D14E9A7EB00301A09 /* AudioToolbox.framework in Frameworks */,
				4CAD2F7014E9A3BF00656553 /* UIKit.framework in Frameworks */,
				4CAD2F7214E9A3BF00656553 /* Foundation.framework in Frameworks */,
				4CAD2F7414E9A3BF00656553 /* CoreGraphics.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		4C34877014E9B79300301A09 /* Resources */ = {
			isa = PBXGroup;
			children = (
				4C34877814EA699300301A09 /* dmxbeat.aiff */,
				4C34877114E9B7A400301A09 /* caitlin.caf */,
				4C34877214E9B7A400301A09 /* congaloop.caf */,
				4C34877A14EA841000301A09 /* lead.aif */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		4CAD2F6E14E9A3BF00656553 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				4C5C511E14EAA39D0012D39E /* QuartzCore.framework */,
				4C34874C14E9A7EB00301A09 /* AudioToolbox.framework */,
				4CAD2F6F14E9A3BF00656553 /* UIKit.framework */,
				4CAD2F7114E9A3BF00656553 /* Foundation.framework */,
				4CAD2F7314E9A3BF00656553 /* CoreGraphics.framework */,
			);
			name = Frameworks;
			path = ..;
			sourceTree = "<group>";
		};
		4CAD2F7514E9A3BF00656553 /* Audio Controller Test Suite */ = {
			isa = PBXGroup;
			children = (
				4CAD2F8E14E9A40000656553 /* TPAppDelegate.h */,
				4CAD2F8F14E9A40000656553 /* TPAppDelegate.m */,
				4CAD2F9014E9A40000656553 /* TPViewController.h */,
				4CAD2F9114E9A40000656553 /* TPViewController.m */,
				4C34877514E9B8CA00301A09 /* TPAudioFilePlayer.h */,
				4C34877614E9B8CA00301A09 /* TPAudioFilePlayer.m */,
				4C5C511814EA9D790012D39E /* TPOscilloscopeLayer.h */,
				4C5C511914EA9D790012D39E /* TPOscilloscopeLayer.m */,
				4C34877014E9B79300301A09 /* Resources */,
				4CAD2F7614E9A3BF00656553 /* Supporting Files */,
				4CAD2F6E14E9A3BF00656553 /* Frameworks */,
			);
			path = "Audio Controller Test Suite";
			sourceTree = "<group>";
		};
		4CAD2F7614E9A3BF00656553 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				4CAD2F9414E9A41200656553 /* Audio Controller Test Suite-Info.plist */,
				4CAD2F9514E9A41200656553 /* Audio Controller Test Suite-Prefix.pch */,
				4CAD2F9614E9A41200656553 /* main.m */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		4CE501811493F82600F23607 = {
			isa = PBXGroup;
			children = (
				4CE501911493F82600F23607 /* TPAudioController */,
				4CAD2F7514E9A3BF00656553 /* Audio Controller Test Suite */,
				4CE501901493F82600F23607 /* Products */,
			);
			sourceTree = "<group>";
		};
		4CE501901493F82600F23607 /* Products */ = {
			isa = PBXGroup;
			children = (
				4CAD2F6C14E9A3BF00656553 /* Audio Controller Test Suite.app */,
				4C5C50E314EA98E90012D39E /* TPAudioController.framework */,
				4C5C50F714EA98F30012D39E /* TPAudioController.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		4CE501911493F82600F23607 /* TPAudioController */ = {
			isa = PBXGroup;
			children = (
				4CE5019D1493F84300F23607 /* TPAudioController.h */,
				4CE5019E1493F84300F23607 /* TPAudioController.m */,
				4CC62FBE14E7F7A300B5A2DB /* TPACCircularBuffer.c */,
				4CC62FBF14E7F7A300B5A2DB /* TPACCircularBuffer.h */,
				4CE62D0E1494B7B000F908A6 /* TPTrialModeController.h */,
				4CE62D0F1494B7B000F908A6 /* TPTrialModeController.m */,
				4CE501921493F82600F23607 /* Supporting Files */,
			);
			path = TPAudioController;
			sourceTree = "<group>";
		};
		4CE501921493F82600F23607 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				4CE501931493F82600F23607 /* TPAudioController-Info.plist */,
				4CE501971493F82600F23607 /* TPAudioController-Prefix.pch */,
				4C34874714E9A71700301A09 /* TPAudioControllerTrial-Info.plist */,
				4C34874814E9A71700301A09 /* TPAudioControllerTrial-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		4C5C50DE14EA98E90012D39E /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C5C510D14EA9A210012D39E /* TPAudioController.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C5C50F214EA98F30012D39E /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C5C510A14EA9A170012D39E /* TPAudioController.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		4C5C50E214EA98E90012D39E /* TPAudioController */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C5C50EC14EA98EA0012D39E /* Build configuration list for PBXNativeTarget "TPAudioController" */;
			buildPhases = (
				4C5C50DB14EA98E90012D39E /* ShellScript */,
				4C5C50DC14EA98E90012D39E /* Sources */,
				4C5C50DD14EA98E90012D39E /* Frameworks */,
				4C5C50DE14EA98E90012D39E /* Headers */,
				4C5C50DF14EA98E90012D39E /* Resources */,
				4C5C50E014EA98E90012D39E /* ShellScript */,
				4C5C50E114EA98E90012D39E /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = TPAudioController;
			productName = TPAudioController;
			productReference = 4C5C50E314EA98E90012D39E /* TPAudioController.framework */;
			productType = "com.apple.product-type.framework.static";
		};
		4C5C50F614EA98F30012D39E /* TPAudioControllerTrial */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C5C510014EA98F30012D39E /* Build configuration list for PBXNativeTarget "TPAudioControllerTrial" */;
			buildPhases = (
				4C5C50EF14EA98F30012D39E /* ShellScript */,
				4C5C50F014EA98F30012D39E /* Sources */,
				4C5C50F114EA98F30012D39E /* Frameworks */,
				4C5C50F214EA98F30012D39E /* Headers */,
				4C5C50F314EA98F30012D39E /* Resources */,
				4C5C50F414EA98F30012D39E /* ShellScript */,
				4C5C50F514EA98F30012D39E /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = TPAudioControllerTrial;
			productName = TPAudioControllerTrial;
			productReference = 4C5C50F714EA98F30012D39E /* TPAudioController.framework */;
			productType = "com.apple.product-type.framework.static";
		};
		4CAD2F6B14E9A3BF00656553 /* Audio Controller Test Suite */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4CAD2F8C14E9A3BF00656553 /* Build configuration list for PBXNativeTarget "Audio Controller Test Suite" */;
			buildPhases = (
				4CAD2F6814E9A3BF00656553 /* Sources */,
				4CAD2F6914E9A3BF00656553 /* Frameworks */,
				4CAD2F6A14E9A3BF00656553 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				4C5C511614EA9CC00012D39E /* PBXTargetDependency */,
			);
			name = "Audio Controller Test Suite";
			productName = "Audio Controller Test Suite";
			productReference = 4CAD2F6C14E9A3BF00656553 /* Audio Controller Test Suite.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		4CE501831493F82600F23607 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0420;
				ORGANIZATIONNAME = "A Tasty Pixel";
			};
			buildConfigurationList = 4CE501861493F82600F23607 /* Build configuration list for PBXProject "TPAudioController" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 4CE501811493F82600F23607;
			productRefGroup = 4CE501901493F82600F23607 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				4CAD2F6B14E9A3BF00656553 /* Audio Controller Test Suite */,
				4C5C50E214EA98E90012D39E /* TPAudioController */,
				4C5C50F614EA98F30012D39E /* TPAudioControllerTrial */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		4C5C50DF14EA98E90012D39E /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C5C50F314EA98F30012D39E /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4CAD2F6A14E9A3BF00656553 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C34877314E9B7A400301A09 /* caitlin.caf in Resources */,
				4C34877414E9B7A400301A09 /* congaloop.caf in Resources */,
				4C34877914EA699300301A09 /* dmxbeat.aiff in Resources */,
				4C34877B14EA841000301A09 /* lead.aif in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		4C5C50DB14EA98E90012D39E /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n  ([[ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]] || \\\n    ([[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n     [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n     [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n    )\n  )\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n\nif [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nfi\n";
		};
		4C5C50E014EA98E90012D39E /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "INLINED_PYHON_SCRIPT=\"import sys; import os.path; headerPathFromFind = sys.argv[2]; srcRoot = sys.argv[1]; headerPathFromFindWithoutFilename = os.path.dirname( headerPathFromFind ); relatedPathForDirectory = os.path.relpath( headerPathFromFindWithoutFilename, srcRoot ); print( relatedPathForDirectory );\"\n\nHEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$( ls -1 \"$FRAMEWORK_HEADERS_DIR\" )\n\n\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n\n   FIND_RESULT=$( find \"$HEADERS_ROOT\" -name \"$PUBLIC_HEADER\" )\n   RELATIVE_PATH=$( python -c \"$INLINED_PYHON_SCRIPT\" \"$HEADERS_ROOT\" \"$FIND_RESULT\" )\n\n   mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n   mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\ndone\n";
		};
		4C5C50E114EA98E90012D39E /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]\nthen\n    echo \"ONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM}: Skipping other platform build\"\nelse\n    # Make sure the other platform gets built\n    \n    echo \"Build other platform\"\n    \n    echo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    \n    \n    # Build the fat static library binary\n    \n    echo \"Create universal static library\"\n    \n    echo \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \n    echo mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nfi\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sf \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sf \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]\nthen\n    # Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n    \n    echo \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n    \n    echo rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    echo cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nfi\n";
		};
		4C5C50EF14EA98F30012D39E /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n  ([[ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]] || \\\n    ([[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n     [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n     [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n    )\n  )\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n\nif [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nfi\n";
		};
		4C5C50F414EA98F30012D39E /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "INLINED_PYHON_SCRIPT=\"import sys; import os.path; headerPathFromFind = sys.argv[2]; srcRoot = sys.argv[1]; headerPathFromFindWithoutFilename = os.path.dirname( headerPathFromFind ); relatedPathForDirectory = os.path.relpath( headerPathFromFindWithoutFilename, srcRoot ); print( relatedPathForDirectory );\"\n\nHEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$( ls -1 \"$FRAMEWORK_HEADERS_DIR\" )\n\n\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n\n   FIND_RESULT=$( find \"$HEADERS_ROOT\" -name \"$PUBLIC_HEADER\" )\n   RELATIVE_PATH=$( python -c \"$INLINED_PYHON_SCRIPT\" \"$HEADERS_ROOT\" \"$FIND_RESULT\" )\n\n   mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n   mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\ndone\n";
		};
		4C5C50F514EA98F30012D39E /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]\nthen\n    echo \"ONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM}: Skipping other platform build\"\nelse\n    # Make sure the other platform gets built\n    \n    echo \"Build other platform\"\n    \n    echo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    \n    \n    # Build the fat static library binary\n    \n    echo \"Create universal static library\"\n    \n    echo \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \n    echo mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nfi\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sf \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sf \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]\nthen\n    # Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n    \n    echo \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n    \n    echo rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    echo cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nfi\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		4C5C50DC14EA98E90012D39E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C5C510B14EA9A1D0012D39E /* TPAudioController.m in Sources */,
				4C5C510C14EA9A1D0012D39E /* TPACCircularBuffer.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4C5C50F014EA98F30012D39E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4C5C510714EA9A110012D39E /* TPAudioController.m in Sources */,
				4C5C510814EA9A110012D39E /* TPACCircularBuffer.c in Sources */,
				4C5C510914EA9A110012D39E /* TPTrialModeController.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4CAD2F6814E9A3BF00656553 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4CAD2F9214E9A40000656553 /* TPAppDelegate.m in Sources */,
				4CAD2F9314E9A40000656553 /* TPViewController.m in Sources */,
				4CAD2F9814E9A41200656553 /* main.m in Sources */,
				4C34877714E9B8CA00301A09 /* TPAudioFilePlayer.m in Sources */,
				4C5C511C14EA9D790012D39E /* TPOscilloscopeLayer.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		4C5C511614EA9CC00012D39E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 4C5C50E214EA98E90012D39E /* TPAudioController */;
			targetProxy = 4C5C511514EA9CC00012D39E /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		4C5C50ED14EA98EA0012D39E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "TPAudioController/TPAudioController-Prefix.pch";
				INFOPLIST_FILE = "TPAudioController/TPAudioController-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		4C5C50EE14EA98EA0012D39E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "TPAudioController/TPAudioController-Prefix.pch";
				INFOPLIST_FILE = "TPAudioController/TPAudioController-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		4C5C510114EA98F30012D39E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "TPAudioController/TPAudioControllerTrial-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"TRIAL=1",
					"$(inherited)",
				);
				INFOPLIST_FILE = "TPAudioController/TPAudioControllerTrial-Info.plist";
				PRODUCT_NAME = TPAudioController;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		4C5C510214EA98F30012D39E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "TPAudioController/TPAudioControllerTrial-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = "TRIAL=1";
				INFOPLIST_FILE = "TPAudioController/TPAudioControllerTrial-Info.plist";
				PRODUCT_NAME = TPAudioController;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		4CAD2F8A14E9A3BF00656553 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "TPAudioController/Test Suite/Audio Controller Test Suite-Prefix.pch";
				INFOPLIST_FILE = "TPAudioController/Test Suite/Audio Controller Test Suite-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				TARGETED_DEVICE_FAMILY = "1,2";
				WRAPPER_EXTENSION = app;
			};
			name = Debug;
		};
		4CAD2F8B14E9A3BF00656553 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "TPAudioController/Test Suite/Audio Controller Test Suite-Prefix.pch";
				INFOPLIST_FILE = "TPAudioController/Test Suite/Audio Controller Test Suite-Info.plist";
				OTHER_CFLAGS = "-DNS_BLOCK_ASSERTIONS=1";
				PRODUCT_NAME = "$(TARGET_NAME)";
				TARGETED_DEVICE_FAMILY = "1,2";
				WRAPPER_EXTENSION = app;
			};
			name = Release;
		};
		4CE501981493F82600F23607 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = (
					"$(ARCHS_STANDARD_32_BIT)",
					armv6,
				);
				COPY_PHASE_STRIP = NO;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 4.0;
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		4CE501991493F82600F23607 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = (
					"$(ARCHS_STANDARD_32_BIT)",
					armv6,
				);
				COPY_PHASE_STRIP = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 4.0;
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		4C5C50EC14EA98EA0012D39E /* Build configuration list for PBXNativeTarget "TPAudioController" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4C5C50ED14EA98EA0012D39E /* Debug */,
				4C5C50EE14EA98EA0012D39E /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		4C5C510014EA98F30012D39E /* Build configuration list for PBXNativeTarget "TPAudioControllerTrial" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4C5C510114EA98F30012D39E /* Debug */,
				4C5C510214EA98F30012D39E /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		4CAD2F8C14E9A3BF00656553 /* Build configuration list for PBXNativeTarget "Audio Controller Test Suite" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4CAD2F8A14E9A3BF00656553 /* Debug */,
				4CAD2F8B14E9A3BF00656553 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		4CE501861493F82600F23607 /* Build configuration list for PBXProject "TPAudioController" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4CE501981493F82600F23607 /* Debug */,
				4CE501991493F82600F23607 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 4CE501831493F82600F23607 /* Project object */;
}
